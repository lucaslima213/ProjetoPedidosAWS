AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Semana do Desenvolvedor – Dias 1 a 4 Arquitetura completa de Ingestão, Validação, Processamento, Armazenamento, Alteração e Cancelamento de Pedidos.

Resources:

  # -------------------
  # IAM ROLES
  # -------------------
  LambdaValidacaoPedidosRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: lambda-validacao-pedidos-role-lucas-lima
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: EventBridgePutPolicy-lucas-lima
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource: !GetAtt PedidosEventBus.Arn
        - PolicyName: SQSSendMessageToPedidosFIFO-lucas-lima
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource: !GetAtt PedidosQueue.Arn

  LambdaProcessaPedidosRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: lambda-processa-pedidos-role-lucas-lima
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBWritePolicy-lucas-lima
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource: !GetAtt PedidosDynamoDB.Arn
        - PolicyName: SQSReadPolicy-lucas-lima
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: !GetAtt PedidosQueue.Arn

  LambdaAlteraCancelaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: lambda-altera-cancela-role-lucas-lima
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SQSDynamoDBPolicy-lucas-lima
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource:
                  - !GetAtt CancelaPedidoQueue.Arn
                  - !GetAtt AlteraPedidoQueue.Arn
              - Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: !GetAtt PedidosDynamoDB.Arn

  # -------------------
  # SQS QUEUES
  # -------------------
  PedidosDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: pedidos-fifo-dlq-lucas-lima.fifo
      FifoQueue: true

  PedidosQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: pedidos-fifo-queue-lucas-lima.fifo
      FifoQueue: true
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt PedidosDLQ.Arn
        maxReceiveCount: 3

  CancelaPedidoDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: cancela-pedido-dlq-lucas-lima

  CancelaPedidoQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: cancela-pedido-queue-lucas-lima
      VisibilityTimeout: 70
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt CancelaPedidoDLQ.Arn
        maxReceiveCount: 3

  AlteraPedidoDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: altera-pedido-dlq-lucas-lima

  AlteraPedidoQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: altera-pedido-queue-lucas-lima
      VisibilityTimeout: 70
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt AlteraPedidoDLQ.Arn
        maxReceiveCount: 3

  # -------------------
  # EVENTBRIDGE
  # -------------------
  PedidosEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: pedidos-event-bus-lucas-lima

  CancelaPedidoRule:
    Type: AWS::Events::Rule
    Properties:
      Name: cancela-pedido-rule-lucas-lima
      EventBusName: !Ref PedidosEventBus
      EventPattern:
        source:
          - lab.aula4.operacoes
        detail-type:
          - CancelaPedido
      Targets:
        - Arn: !GetAtt CancelaPedidoQueue.Arn
          Id: CancelaPedidoTarget

  AlteraPedidoRule:
    Type: AWS::Events::Rule
    Properties:
      Name: altera-pedido-rule-lucas-lima
      EventBusName: !Ref PedidosEventBus
      EventPattern:
        source:
          - lab.aula4.operacoes
        detail-type:
          - AlteraPedido
      Targets:
        - Arn: !GetAtt AlteraPedidoQueue.Arn
          Id: AlteraPedidoTarget

  # -------------------
  # DYNAMODB
  # -------------------
  PedidosDynamoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: pedidos-db-lucas-lima
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: pedidoId
          AttributeType: S
      KeySchema:
        - AttributeName: pedidoId
          KeyType: HASH

  # -------------------
  # S3
  # -------------------
  PedidosBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: pedidos-bucket-lucas-lima

  BucketNotification:
    Type: AWS::S3::BucketNotification
    Properties:
      Bucket: !Ref PedidosBucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt IngestaoS3Lambda.Arn

  LambdaS3Permission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref IngestaoS3Lambda
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt PedidosBucket.Arn

  # -------------------
  # LAMBDAS
  # -------------------
  ValidacaoPedidosLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: validacao-pedidos-lambda-lucas-lima
      Runtime: python3.12
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaValidacaoPedidosRole.Arn
      Code:
        S3Bucket: meu-bucket-lambdas
        S3Key: validacao-pedidos.zip
      Environment:
        Variables:
          EVENT_BUS_NAME: !Ref PedidosEventBus
          SQS_QUEUE_URL: !Ref PedidosQueue

  ProcessaPedidosLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: processa-pedidos-lambda-lucas-lima
      Runtime: python3.12
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaProcessaPedidosRole.Arn
      Code:
        S3Bucket: meu-bucket-lambdas
        S3Key: processa-pedidos.zip
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref PedidosDynamoDB

  IngestaoS3Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ingestao-s3-lambda-lucas-lima
      Runtime: python3.12
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaValidacaoPedidosRole.Arn
      Code:
        S3Bucket: meu-bucket-lambdas
        S3Key: ingestao-s3.zip
      Environment:
        Variables:
          SQS_QUEUE_URL: !Ref PedidosQueue

  CancelaPedidoLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: cancela-pedido-lambda-lucas-lima
      Runtime: python3.12
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaAlteraCancelaRole.Arn
      Timeout: 60
      Code:
        S3Bucket: meu-bucket-lambdas
        S3Key: cancela-pedido.zip
      Environment:
        Variables:
          DYNAMODB_TABLE